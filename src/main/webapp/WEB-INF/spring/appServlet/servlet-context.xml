<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:mvc="http:/www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-config />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<context:component-scan base-package="net.webapp.ecommerce" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- <beans:bean -->
	<!-- class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
	<!-- <beans:property name="prefix" value="/WEB-INF/views/" /> -->
	<!-- <beans:property name="suffix" value=".jsp" /> -->
	<!-- </beans:bean> -->

	<!-- Tiles View Resolver Configuration -->
	<bean id="tilesViewresolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView">
		</property>
	</bean>
	<!-- Initializes the Apache Tiles CompositeView system -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<value>/WEB-INF/tiles/tiles.xml</value>
		</property>
	</bean>

	<!-- Configuration Upload -->
	<bean name="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 1000000 octects : taille de la requête, y compris les données -->
		<property name="maxUploadSize" value="1000000"></property>

	</bean>



</beans>
